#!/bin/bash

# env JOBHOME

TARGET=$(basename $BASH_SOURCE)
export TARGET

LOAD=$1
LOAD_S3=$2
LOAD_ZIP=`basename $LOAD_S3 .zip`
SAVE_S3=$3

if [ -z ${UNIT_PROCESS+x} ]; then export UNIT_PROCESS=$HOME/unit_process ; fi
if [ -z ${UNIT_PARAMETERS+x} ]; then export UNIT_PARAMETERS=$HOME/unit_parameters ; fi
export GRASS_BATCH_JOB=$UNIT_PROCESS/$LOAD.grass

# rc will conditionally set SOURCE_LOCATION
if [ -e rc ] ; then
. rc
fi

echo "SYNC LOCATION $SOURCE_LOCATION TO JOB $JOBHOME"
( cd ${GRASSDBASE} ; rsync -aq --delete ${SOURCE_LOCATION}/ ${JOBHOME} & )

TARGETDIR=${TARGETBASE}/${TARGET}
sudo mkdir -p $TARGETDIR
sudo chmod a+w $TARGETDIR
cd $TARGETDIR
export TARGETDIR

if [ ! -e content ] ; then
aws s3 cp $LOAD_S3 .
unzip $LOAD_ZIP.zip
#cd $LOAD_ZIP
#for i in * ; do
#k=`echo "$i" | sed -e 's/[- ]/_/'`
#if [ "$i" != "$k" ] ; then
#mv "$i" "$k"
#fi
#done
#cd ..
mv $LOAD_ZIP content
fi

wait
if RUN=$JOBHOME HOME=$TARGETDIR one_job.sh ; then
RC=$?
echo "SYNC $GRASSDBASE/aea to $SAVE_S3/grassdata/aea"
trys=0
until timeout $ALARMTIME aws s3 sync $GRASSDBASE/aea $SAVE_S3/grassdata/aea ; do
let trys=$trys+1
aws sns publish --topic "$STATUSNOTE" --message "TIMEOUT cannot sync to $SAVE_S3"
if [ $trys -gt 10 ]; then
	exit
fi
done
if [ ! -e leave-it ] ; then
rm -rf $GRASSDBASE/*/$JOBHOME
rm -rf $TARGETDIR
fi
else
RC=$?
aws sns publish --topic "$STATUSNOTE" --message "FAIL $TARGET $JOBHOME"
fi

exit $RC
