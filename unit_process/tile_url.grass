#!/bin/bash

#env NAME
#env RUN
#env LINE
#env MINZOOM
#env MAXZOOM

if [ "X${NAME}" == "X" ] ; then NAME=default ; fi
if [ "X${MINZOOM}" == "X" ] ; then MINZOOM=3 ; fi
if [ "X${MAXZOOM}" == "X" ] ; then MAXZOOM=9 ; fi

base="http://wecc-scdt-public.s3-website-us-west-2.amazonaws.com"

TIME=`date +"%Y-%M-%D %H:%M:%S"`
echo ${BASH_SOURCE}

swk=corridor

mkdir -p $TARGETDIR/$swk/${NAME}

for i in $BLM_COST $EDWG_COST $LANDCOV_COST $SLOPE_COST ; do
echo -n "" \
> ${TARGETDIR}/$swk/${NAME}/${i}.json
done

if [ "X$KML" == "X" ] ; then
echo "$TIME CREATE $RUN LINE=$LINE"
echo "$LINE," \
| perl -ne 'BEGIN{$/=",";}s/,$//;if($.%2==1){$lat=$_;}else{$lon=$_;}if($.>1&&$.%2==0){print"$lon,$lat\n";}' \
| v.in.ascii -n fs=, output=$RUN
else
echo "$TIME CREATE $RUN KML=$KML"
v.in.ogr -e dsn=$TARGETDIR/shapefiles output=$RUN
fi

echo "$TIME CREATE ${LINE_LOCATION} $RUN"
g.mapset -c location=${LINE_LOCATION} mapset=$RUN

g.region -d -a vect=$RUN@PERMANENT -bg

eval `g.region -bg`

minlat=$ll_s
minlon=$ll_w
maxlat=$ll_n
maxlon=$ll_e

echo "$TIME CREATE ${GMAP_LOCATION} $RUN"
g.mapset -c location=${GMAP_LOCATION} mapset=$RUN

for ((zoom=${MINZOOM};$zoom<=${MAXZOOM};zoom++)) {

if [ $zoom -gt ${MINZOOM} ] ; then c="," ; else c="" ; fi

for i in $BLM_COST $EDWG_COST $LANDCOV_COST $SLOPE_COST ; do
echo "$c[$zoom" \
>> ${TARGETDIR}/$swk/${NAME}/${i}.json
done

#res=`echo "$RESOLUTION*(2^($MAXZOOM-$zoom))" | bc`
factor=`echo "2^$zoom" | bc`
lon_tile_size=`echo "360/$factor" | bc -l`
lat_tile_size=`echo "180/$factor" | bc -l`
sw_col=`echo "(180+$minlon)/$lon_tile_size" | bc -l`
ne_col=`echo "(180+$maxlon)/$lon_tile_size" | bc -l`
ne_row=`echo "(90-$maxlat)/$lat_tile_size" | bc -l`
sw_row=`echo "(90-$minlat)/$lat_tile_size" | bc -l`
sw_col=`echo "($sw_col)/1" | bc`
ne_col=`echo "($ne_col+0.5)/1" | bc`
ne_row=`echo "($ne_row)/1" | bc`
sw_row=`echo "($sw_row+0.5)/1" | bc`

for ((x=${sw_col};$x<=${ne_col};x++)) {
for ((y=${ne_row};$y<=${sw_row};y++)) {

xmin=`echo "$x*$lon_tile_size-180" | bc -l`
ymax=`echo "90-$y*$lat_tile_size" | bc -l`
xmax=`echo "$xmin+$lon_tile_size" | bc -l`
ymin=`echo "$ymax-$lat_tile_size" | bc -l`

g.mapset location=${LINE_LOCATION} mapset=$RUN

g.region -d w=$xmin s=$ymin e=$xmax n=$ymax

v.in.region output=$REGION --overwrite

g.mapset location=${GMAP_LOCATION} mapset=$RUN
g.region -d
v.proj location=${LINE_LOCATION} mapset=$RUN input=$REGION --overwrite
g.region vect=$REGION rows=512 cols=512

eval `g.region -bg`

for i in $BLM_COST $EDWG_COST $LANDCOV_COST $SLOPE_COST ; do
p="$base/tile/${zoom}/${i}/${x}_${y}.png"
echo ",[$ll_s,$ll_w,$ll_n,$ll_e,\"$p\"]" \
>> ${TARGETDIR}/$swk/${NAME}/${i}.json
done

g.remove vect=$REGION
}
}

for i in $BLM_COST $EDWG_COST $LANDCOV_COST $SLOPE_COST ; do
echo "]" \
>> ${TARGETDIR}/$swk/${NAME}/${i}.json
done

}

TIME=`date +"%Y-%M-%D %H:%M:%S"`
echo "$TIME finished $TARGETDIR"
